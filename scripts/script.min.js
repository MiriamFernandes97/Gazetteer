let userCoords={};const countryList=[];let countryOutline,weatherUrl="";const light=L.tileLayer("https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',subdomains:"abcd",maxZoom:19}),dark=L.tileLayer("https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',subdomains:"abcd",maxZoom:19}),satellite=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{minZoom:1,attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"}),earthAtNight=L.tileLayer("https://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default/{time}/{tilematrixset}{maxZoom}/{z}/{y}/{x}.{format}",{attribution:'Imagery provided by services from the Global Imagery Browse Services (GIBS), operated by the NASA/GSFC/Earth Science Data and Information System (<a href="https://earthdata.nasa.gov">ESDIS</a>) with funding provided by NASA/HQ.',maxZoom:8,minZoom:2,format:"jpg",time:"",tilematrixset:"GoogleMapsCompatible_Level"}),temp=L.tileLayer(weatherUrl,{tileSize:512,zoomOffset:-1,layer:"temp_new",minZoom:2}),precipitation=L.tileLayer(weatherUrl,{tileSize:512,minZoom:2,zoomOffset:-1,layer:"precipitation_new"}),map=L.map("map",{layers:[dark]}),baseMaps={Light:light,Dark:dark,Satellite:satellite,"Earth At Night":earthAtNight},weatherOverlays={Temperature:temp,Precipitation:precipitation};L.control.layers(baseMaps,weatherOverlays).addTo(map);const earthquakeLayer=L.layerGroup(),cityLayer=L.layerGroup(),monumentLayer=L.layerGroup(),monumentMarkers=L.markerClusterGroup({iconCreateFunction:e=>L.divIcon({html:`<div><span>${e.getChildCount()}</span></div>`,className:"monument-marker-cluster marker-cluster",iconSize:new L.Point(40,40)})}),getCountryList=()=>{$.getJSON("php/getCountryList.php",e=>{$(e).each((e,t)=>{countryList.push(t)})})},getCountryInfo=e=>{$.ajax({url:"php/getCountryInfo.php",dataType:"json",type:"POST",data:{countryCode:e}}).done(e=>{const t=e.data,o=new Country(t.name,t.alpha2Code,t.area,t.flag,t.capital,t.population,t.currencies[0].name,t.currencies[0].symbol);o.displayInfo(),o.getCities(),o.getMonuments(),o.getBoundingBox()})},selectNewCountry=(e,t)=>{const o=Date.now();$.ajax({url:"php/getPolygon.php",type:"POST",dataType:"json",data:{country:e,type:t}}).done(e=>{const t=e.properties.ISO_A3;countryOutline&&countryOutline.clearLayers(),countryOutline=L.geoJSON(e,{style:{color:"#fd7e14"}}).addTo(map),map.fitBounds(countryOutline.getBounds()),getCountryInfo(t),console.log(Date.now()-o)}).fail(()=>{console.log("Error in selectNewCountry")})},getCountryFromCoords=(e,t)=>{function o(){$("#modalTitle").html("Error"),$("#modalBody").html("Unfortunately there was an error finding a country for these coordinates. Please try a different location"),$("#infoModal").modal()}$.ajax({url:"php/getCountryFromCoords.php",type:"POST",dataType:"json",data:{lat:e,long:t}}).done(e=>{console.log(e);const t=e.data[0];if(null==t)return void o();const a=t["ISO_3166-1_alpha-3"];t.country&&($("#countrySearch").val(t.country),adjustFontToFitSearchbar(t.country),selectNewCountry(a,"code"))}).fail(()=>{o()})},jumpToUserLocation=()=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{const{longitude:t,latitude:o}=e.coords;userCoords={longitude:t,latitude:o},getCountryFromCoords(o,t)},e=>{selectNewCountry("GBR","code"),userCoords={longitude:-.118092,latitude:51.509865},alert("Location request denied. Sending you to the UK by default, distances shown will be based on London.")}):selectNewCountry("GBR","code")},handleSearchbarChange=(e,t)=>{const o=t.item.value;adjustFontToFitSearchbar(o),selectNewCountry(o,"name")},adjustFontToFitSearchbar=e=>{e.length>25?$("#countrySearch").css("font-size","0.6em"):e.length>15?$("#countrySearch").css("font-size","1em"):$("#countrySearch").css("font-size","1.3em")},getCountryFromClick=e=>{const{lat:t,lng:o}=e.latlng;getCountryFromCoords(t,o)};$("#countrySearch").autocomplete({source:countryList,minLength:0,select:handleSearchbarChange,position:{my:"top",at:"bottom",of:"#countrySearch"}});const infoPopup=e=>{let t;const o=e.target.options;"city"==o.type?t=new City(o.latitude,o.longitude,o.geonameId,o.name,o.population,o.type):"monument"==o.type&&(t=new Monument(o.latitude,o.longitude,o.geonameId,o.name,o.type)),t.getDistanceFromLatLonInKm(userCoords.latitude,userCoords.longitude),t.getWikiDetails(),t.getWeatherInfo()},removeLoader=()=>{countryOutline&&($("#preloader").delay(100).fadeOut("slow",()=>{$(this).remove()}),clearInterval(checkInterval))};let checkInterval=setInterval(removeLoader,50);$(document).ready(()=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{const{longitude:t,latitude:o}=e.coords;userCoords={longitude:t,latitude:o},getCountryFromCoords(o,t)},e=>{selectNewCountry("GBR","code"),userCoords={longitude:-.118092,latitude:51.509865},alert("Location request denied. Sending you to the UK by default, distances shown will be based on London.")}):selectNewCountry("GBR","code"),removeLoader(),$.getJSON("php/getCountryList.php",e=>{$(e).each((e,t)=>{countryList.push(t)})}),$("#countrySearch").click(()=>$("#countrySearch").val("")),map.on("click",getCountryFromClick),$("#earthquakeBtn").click(()=>{map.removeLayer(cityLayer),map.removeLayer(monumentMarkers),earthquakeLayer.addTo(map)}),$("#cityBtn").click(()=>{map.removeLayer(earthquakeLayer),map.removeLayer(monumentMarkers),map.addLayer(cityLayer)}),$("#monumentBtn").click(()=>{map.removeLayer(earthquakeLayer),map.removeLayer(cityLayer),map.addLayer(monumentMarkers)})});